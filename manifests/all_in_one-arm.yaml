---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gitpipelines.iceci.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase
    format: byte
    name: phase
    type: string
  group: iceci.io
  names:
    kind: GitPipeline
    listKind: GitPipelineList
    plural: gitpipelines
    singular: gitpipeline
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            context:
              additionalProperties:
                type: string
              type: object
            git:
              properties:
                auth:
                  properties:
                    secret:
                      type: string
                    type:
                      type: string
                  required:
                  - secret
                  - type
                  type: object
                commitSHA:
                  type: string
                repositoryURL:
                  type: string
              required:
              - commitSHA
              - repositoryURL
              type: object
          required:
          - git
          type: object
        status:
          properties:
            checkoutMetadata:
              properties:
                authorDate:
                  type: string
                authorEmail:
                  type: string
                authorName:
                  type: string
                commitHash:
                  type: string
                logHeader:
                  type: string
                logMessage:
                  type: string
                reflogEmail:
                  type: string
                reflogName:
                  type: string
              type: object
            duration:
              format: int32
              type: integer
            finishedTime:
              format: date-time
              type: string
            initializedTime:
              format: date-time
              type: string
            message:
              type: string
            phase:
              type: string
            pipeline:
              type: string
            reason:
              type: string
            resourceNames:
              properties:
                gitClone:
                  type: string
                pipelineConfigMap:
                  type: string
                workspaceVolume:
                  type: string
              type: object
            workspaceVolume:
              properties:
                pvcName:
                  type: string
                subPath:
                  type: string
              required:
              - pvcName
              type: object
          required:
          - workspaceVolume
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gitwatchers.iceci.io
spec:
  group: iceci.io
  names:
    kind: GitWatcher
    listKind: GitWatcherList
    plural: gitwatchers
    singular: gitwatcher
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            git:
              properties:
                auth:
                  properties:
                    secret:
                      type: string
                    type:
                      type: string
                  required:
                  - secret
                  - type
                  type: object
                provider:
                  enum:
                  - github
                  - gitlab
                  - gitea
                  type: string
                repositoryURL:
                  type: string
              required:
              - repositoryURL
              type: object
            orphanPipelines:
              type: boolean
            schedule:
              type: string
          required:
          - git
          - schedule
          type: object
        status:
          properties:
            buildNumber:
              type: integer
            knownGitEvent:
              properties:
                commits:
                  items:
                    properties:
                      name:
                        type: string
                      refName:
                        type: string
                      sha:
                        type: string
                      type:
                        type: string
                    required:
                    - name
                    - refName
                    - sha
                    - type
                    type: object
                  type: array
                tags:
                  items:
                    properties:
                      name:
                        type: string
                      refName:
                        type: string
                      sha:
                        type: string
                      type:
                        type: string
                    required:
                    - name
                    - refName
                    - sha
                    - type
                    type: object
                  type: array
              type: object
            lastFailedRun:
              properties:
                runTime:
                  format: date-time
                  type: string
              type: object
            lastSuccessfulRun:
              properties:
                runTime:
                  format: date-time
                  type: string
              type: object
            message:
              type: string
            phase:
              type: string
            reason:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: backingservices.icekube.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase
    format: byte
    name: phase
    priority: 1
    type: string
  group: icekube.io
  names:
    kind: BackingService
    listKind: BackingServiceList
    plural: backingservices
    singular: backingservice
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            dockerSecret:
              properties:
                secretName:
                  description: Name of kubernetes secret
                  type: string
              required:
              - secretName
              type: object
            environment:
              items:
                properties:
                  fromSecret:
                    type: string
                  name:
                    type: string
                  value:
                    type: string
                required:
                - name
                type: object
              type: array
            hosts:
              additionalProperties:
                type: string
              type: object
            image:
              type: string
            imagePullSecret:
              type: string
            nodeSelector:
              additionalProperties:
                type: string
              type: object
            resourceRequest:
              properties:
                cpu:
                  type: string
                memory:
                  type: string
              type: object
            script:
              type: string
            serviceName:
              pattern: ^[a-z]+[a-z\-_0-9]+$
              type: string
          required:
          - image
          - serviceName
          type: object
        status:
          properties:
            duration:
              format: int32
              type: integer
            finishedTime:
              format: date-time
              type: string
            initializedTime:
              format: date-time
              type: string
            message:
              type: string
            pendingDuration:
              format: int32
              type: integer
            pendingStartedTime:
              format: date-time
              type: string
            phase:
              type: string
            podIP:
              type: string
            podStatus:
              properties:
                exitCode:
                  description: Pod main container (at index 0) return code
                  format: int32
                  type: integer
                name:
                  description: Name of pod
                  type: string
              type: object
            reason:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: dockerbuilds.icekube.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase
    format: byte
    name: phase
    priority: 1
    type: string
  group: icekube.io
  names:
    kind: DockerBuild
    listKind: DockerBuildList
    plural: dockerbuilds
    singular: dockerbuild
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            docker:
              properties:
                contextPath:
                  description: Path relative to workspace directory
                  type: string
                dockerfilePath:
                  description: Path relative to workspace directory
                  type: string
                imageName:
                  type: string
                registry:
                  type: string
                tag:
                  type: string
                user:
                  type: string
              required:
              - contextPath
              - dockerfilePath
              - imageName
              - tag
              - user
              type: object
            dockerSecret:
              type: string
            volumeMounts:
              items:
                properties:
                  name:
                    type: string
                  path:
                    type: string
                  pvcName:
                    type: string
                  subPath:
                    type: string
                required:
                - name
                - pvcName
                type: object
              type: array
          required:
          - docker
          - dockerSecret
          - volumeMounts
          type: object
        status:
          properties:
            duration:
              format: int32
              type: integer
            finishedTime:
              format: date-time
              type: string
            initializedTime:
              format: date-time
              type: string
            message:
              type: string
            pendingDuration:
              format: int32
              type: integer
            pendingStartedTime:
              format: date-time
              type: string
            phase:
              type: string
            podStatus:
              properties:
                exitCode:
                  description: Pod main container (at index 0) return code
                  format: int32
                  type: integer
                name:
                  description: Name of pod
                  type: string
              type: object
            reason:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gitclones.icekube.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase
    format: byte
    name: phase
    type: string
  group: icekube.io
  names:
    kind: GitClone
    listKind: GitCloneList
    plural: gitclones
    singular: gitclone
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            getMetadata:
              type: boolean
            git:
              properties:
                auth:
                  properties:
                    secret:
                      type: string
                    type:
                      type: string
                  required:
                  - secret
                  - type
                  type: object
                commitSHA:
                  type: string
                repositoryURL:
                  type: string
              required:
              - commitSHA
              - repositoryURL
              type: object
            volume:
              properties:
                pvcName:
                  type: string
                subPath:
                  type: string
              required:
              - pvcName
              type: object
          required:
          - git
          - volume
          type: object
        status:
          properties:
            checkoutMetadata:
              properties:
                authorDate:
                  type: string
                authorEmail:
                  type: string
                authorName:
                  type: string
                commitHash:
                  type: string
                logHeader:
                  type: string
                logMessage:
                  type: string
                reflogEmail:
                  type: string
                reflogName:
                  type: string
              type: object
            duration:
              format: int32
              type: integer
            finishedTime:
              format: date-time
              type: string
            initializedTime:
              format: date-time
              type: string
            message:
              type: string
            phase:
              type: string
            podStatus:
              properties:
                exitCode:
                  description: Pod main container (at index 0) return code
                  format: int32
                  type: integer
                name:
                  description: Name of pod
                  type: string
              type: object
            reason:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelines.icekube.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    description: Age
    format: date-time
    name: age
    type: date
  - JSONPath: .status.phase
    description: Phase
    format: byte
    name: phase
    type: string
  - JSONPath: .status.stage
    description: Stage
    format: byte
    name: stage
    type: string
  - JSONPath: .status.currentStep
    description: Current step
    format: int32
    name: s
    type: integer
  - JSONPath: .status.currentFailureHandler
    description: Current failure handler
    format: int32
    name: fh
    type: integer
  group: icekube.io
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            pipelineSpec:
              properties:
                failureHandlers:
                  items:
                    properties:
                      envFromSecret:
                        items:
                          properties:
                            envName:
                              description: Name of environment variable
                              type: string
                            objectKey:
                              description: Key in config map or secret
                              type: string
                            objectName:
                              description: Name of config map or secret
                              type: string
                          required:
                          - objectName
                          type: object
                        type: array
                      environment:
                        items:
                          properties:
                            fromSecret:
                              type: string
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      files:
                        items:
                          properties:
                            fromSecret:
                              type: string
                            path:
                              type: string
                          required:
                          - fromSecret
                          - path
                          type: object
                        type: array
                      image:
                        type: string
                      imagePullSecret:
                        type: string
                      name:
                        pattern: ^[a-z]+[a-z\-_0-9]+$
                        type: string
                      script:
                        type: string
                    required:
                    - image
                    - name
                    type: object
                  type: array
                globals:
                  properties:
                    environment:
                      items:
                        properties:
                          fromSecret:
                            type: string
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    imagePullSecret:
                      type: string
                    onFailure:
                      items:
                        properties:
                          handlerName:
                            type: string
                        required:
                        - handlerName
                        type: object
                      type: array
                  type: object
                services:
                  items:
                    properties:
                      envFromSecret:
                        items:
                          properties:
                            envName:
                              description: Name of environment variable
                              type: string
                            objectKey:
                              description: Key in config map or secret
                              type: string
                            objectName:
                              description: Name of config map or secret
                              type: string
                          required:
                          - objectName
                          type: object
                        type: array
                      environment:
                        items:
                          properties:
                            fromSecret:
                              type: string
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        type: string
                      imagePullSecret:
                        type: string
                      name:
                        pattern: ^[a-z]+[a-z\-_0-9]+$
                        type: string
                      onFailure:
                        items:
                          properties:
                            handlerName:
                              type: string
                          required:
                          - handlerName
                          type: object
                        type: array
                      script:
                        type: string
                    required:
                    - image
                    - name
                    type: object
                  type: array
                steps:
                  items:
                    properties:
                      dockerBuild:
                        properties:
                          contextPath:
                            description: Path relative to workspace directory
                            type: string
                          dockerfilePath:
                            description: Path relative to workspace directory
                            type: string
                          imageBuildSecret:
                            type: string
                          imageName:
                            type: string
                          registry:
                            type: string
                          tag:
                            type: string
                          user:
                            type: string
                        required:
                        - imageBuildSecret
                        - imageName
                        - tag
                        - user
                        type: object
                      name:
                        pattern: ^[a-z]+[a-z\-_0-9]+$
                        type: string
                      onFailure:
                        items:
                          properties:
                            handlerName:
                              type: string
                          required:
                          - handlerName
                          type: object
                        type: array
                      simpleStep:
                        properties:
                          envFromSecret:
                            items:
                              properties:
                                envName:
                                  description: Name of environment variable
                                  type: string
                                objectKey:
                                  description: Key in config map or secret
                                  type: string
                                objectName:
                                  description: Name of config map or secret
                                  type: string
                              required:
                              - objectName
                              type: object
                            type: array
                          environment:
                            items:
                              properties:
                                fromSecret:
                                  type: string
                                name:
                                  type: string
                                value:
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          files:
                            items:
                              properties:
                                fromSecret:
                                  type: string
                                path:
                                  type: string
                              required:
                              - fromSecret
                              - path
                              type: object
                            type: array
                          image:
                            type: string
                          imagePullSecret:
                            type: string
                          script:
                            type: string
                        required:
                        - image
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                workingDir:
                  type: string
              type: object
            volumeMounts:
              items:
                properties:
                  name:
                    type: string
                  path:
                    type: string
                  pvcName:
                    type: string
                  subPath:
                    type: string
                required:
                - name
                - pvcName
                type: object
              type: array
          required:
          - pipelineSpec
          type: object
        status:
          properties:
            currentFailureHandler:
              format: int32
              type: integer
            currentStep:
              format: int32
              type: integer
            duration:
              format: int32
              type: integer
            failureHandlerReferences:
              items:
                properties:
                  handlerName:
                    type: string
                required:
                - handlerName
                type: object
              type: array
            failureHandlerStatuses:
              items:
                properties:
                  duration:
                    format: int32
                    type: integer
                  finishedTime:
                    format: date-time
                    type: string
                  initializedTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  name:
                    pattern: ^[a-z]+[a-z\-_0-9]+$
                    type: string
                  phase:
                    type: string
                  reason:
                    type: string
                  resourceName:
                    type: string
                type: object
              type: array
            finishedTime:
              format: date-time
              type: string
            initializedTime:
              format: date-time
              type: string
            message:
              type: string
            phase:
              type: string
            reason:
              type: string
            serviceStatuses:
              items:
                properties:
                  message:
                    type: string
                  name:
                    pattern: ^[a-z]+[a-z\-_0-9]+$
                    type: string
                  phase:
                    type: string
                  podIP:
                    type: string
                  reason:
                    type: string
                  resourceName:
                    type: string
                type: object
              type: array
            stage:
              type: string
            stepStatuses:
              items:
                properties:
                  duration:
                    format: int32
                    type: integer
                  finishedTime:
                    format: date-time
                    type: string
                  initializedTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  name:
                    pattern: ^[a-z]+[a-z\-_0-9]+$
                    type: string
                  phase:
                    type: string
                  reason:
                    type: string
                  resourceName:
                    type: string
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tasks.icekube.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    description: Age
    format: date-time
    name: age
    type: date
  - JSONPath: .status.phase
    description: Phase
    format: byte
    name: phase
    type: string
  - JSONPath: .status.podStatus.name
    description: Pod name
    format: byte
    name: podName
    priority: 1
    type: string
  - JSONPath: .status.podStatus.exitCode
    description: Exit code
    format: int32
    name: exitCode
    priority: 1
    type: integer
  group: icekube.io
  names:
    kind: Task
    listKind: TaskList
    plural: tasks
    singular: task
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            autoLoad:
              type: boolean
            cleanupTTL:
              type: integer
            configMapEnv:
              items:
                type: string
              type: array
            configMapVolume:
              items:
                type: string
              type: array
            envFromSecret:
              items:
                properties:
                  envName:
                    description: Name of environment variable
                    type: string
                  objectKey:
                    description: Key in config map or secret
                    type: string
                  objectName:
                    description: Name of config map or secret
                    type: string
                required:
                - objectName
                type: object
              type: array
            environment:
              items:
                properties:
                  fromSecret:
                    type: string
                  name:
                    type: string
                  value:
                    type: string
                required:
                - name
                type: object
              type: array
            files:
              items:
                properties:
                  fromSecret:
                    type: string
                  path:
                    type: string
                required:
                - fromSecret
                - path
                type: object
              type: array
            hosts:
              additionalProperties:
                type: string
              type: object
            image:
              type: string
            imagePullPolicy:
              description: PullPolicy describes a policy for if/when to pull a container
                image
              type: string
            imagePullSecret:
              type: string
            nodeSelector:
              additionalProperties:
                type: string
              type: object
            resourceRequest:
              properties:
                cpu:
                  type: string
                memory:
                  type: string
              type: object
            script:
              type: string
            secretEnv:
              items:
                type: string
              type: array
            secretVolume:
              items:
                type: string
              type: array
            serviceAccountName:
              type: string
            volumeMounts:
              items:
                properties:
                  name:
                    type: string
                  path:
                    type: string
                  pvcName:
                    type: string
                  subPath:
                    type: string
                required:
                - name
                - pvcName
                type: object
              type: array
            workingDir:
              type: string
          required:
          - image
          type: object
        status:
          properties:
            cleanupTime:
              format: date-time
              type: string
            duration:
              format: int32
              type: integer
            finishedTime:
              format: date-time
              type: string
            initializedTime:
              format: date-time
              type: string
            message:
              type: string
            pendingDuration:
              format: int32
              type: integer
            pendingStartedTime:
              format: date-time
              type: string
            phase:
              type: string
            podStatus:
              properties:
                exitCode:
                  description: Pod main container (at index 0) return code
                  format: int32
                  type: integer
                name:
                  description: Name of pod
                  type: string
              type: object
            reason:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: workspaces.icekube.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase
    format: byte
    name: phase
    type: string
  - JSONPath: .status.volume.pvcName
    description: PVCName
    format: byte
    name: pvcname
    type: string
  - JSONPath: .status.volume.subPath
    description: SubPath
    format: byte
    name: subpath
    type: string
  group: icekube.io
  names:
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Workspace generator
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            storageType:
              enum:
              - dynamic
              - shared
              type: string
          required:
          - storageType
          type: object
        status:
          properties:
            message:
              type: string
            phase:
              type: string
            reason:
              type: string
            volume:
              properties:
                pvcName:
                  type: string
                subPath:
                  type: string
              required:
              - pvcName
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iceci-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: iceci-operator
  template:
    metadata:
      labels:
        name: iceci-operator
    spec:
      serviceAccountName: iceci-operator
      containers:
      - name: iceci-operator
        image: docker.io/iceci/iceci-operator:alpha4-arm
        imagePullPolicy: Always
        env:
        - name: ICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "iceci-operator"
        - name: ICE_DYNAMIC_PVC
          value: iceci-dynamic-storage
        - name: ICE_SHARED_PVC
          value: iceci-shared-storage
        - name: ICE_IMAGE_KANIKO
          value: "iceci/kaniko-arm:0.19.0"
        - name: ICE_IMAGE_UTILS
          value: "iceci/utils-arm:2"
        - name: ICE_IMAGE_BUILDKIT
          value: "moby/buildkit:master-rootless"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: iceci-operator
subjects:
- kind: ServiceAccount
  name: iceci-operator
roleRef:
  kind: Role
  name: iceci-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: iceci-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - "pods/log"
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - iceci-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - iceci.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - icekube.io
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: iceci-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ice-operator-step

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ice-operator-step
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - patch
  - get
  - create
  - delete

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ice-operator-step
subjects:
- kind: ServiceAccount
  name: ice-operator-step
roleRef:
  kind: Role
  name: ice-operator-step
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: iceci-shared-storage
  labels:
    name: iceci-shared-storage
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteMany
  hostPath:
    path: /iceci/shared-storage
    type: DirectoryOrCreate

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: iceci-shared-storage
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: iceci-shared-storage

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: iceci-dynamic-storage
  labels:
    name: iceci-dynamic-storage
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteMany
  hostPath:
    path: /iceci/dynamic-storage
    type: DirectoryOrCreate

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: iceci-dynamic-storage
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: iceci-dynamic-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iceci-api
  labels:
    name: iceci-api
spec:
  replicas: 1
  selector:
    matchLabels:
      name: iceci-api
  template:
    metadata:
      labels:
        name: iceci-api
    spec:
      serviceAccountName: iceci-operator
      containers:
      - name: iceci-api
        image: docker.io/iceci/iceci-api:alpha4-arm
        imagePullPolicy: Always
        env:
        - name: ICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ICECI_DB_USER
          value: user
        - name: ICECI_DB_HOST
          value: iceci-postgres
        - name: ICECI_DB_NAME
          value: iceci
        - name: ICECI_DB_PASS
          value: pass
        - name: ICECI_DB_PORT
          value: "5432"
        - name: ICECI_DB_DIALECT
          value: postgres

---
apiVersion: v1
kind: Service
metadata:
  name: iceci-api
spec:
  selector:
    name: iceci-api
  type: ClusterIP
  ports:
  - protocol: TCP
    name: api
    port: 80
    targetPort: 8000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: iceci
spec:
  rules:
  #  - host: iceci.local
  - http:
      paths:
      - path: /api
        backend:
          serviceName: iceci-api
          servicePort: 80
      - path: /
        backend:
          serviceName: iceci-ui
          servicePort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: iceci-postgres
spec:
  selector:
    matchLabels:
      name: iceci-postgres
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: iceci-postgres
  labels:
    name: iceci-postgres
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /iceci/postgres
    type: DirectoryOrCreate

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iceci-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      name: iceci-postgres
  template:
    metadata:
      labels:
        name: iceci-postgres
    spec:
      containers:
      - name: iceci-postgres
        image: postgres:11
        ports:
        - containerPort: 5432
        imagePullPolicy: Always
        env:
        - name: OPERATOR_NAME
          value: "iceci-postgres"
        - name: POSTGRES_PASSWORD
          value: pass
        - name: POSTGRES_USER
          value: user
        - name: POSTGRES_DB
          value: iceci
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: pgdata
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: iceci-postgres

---
apiVersion: v1
kind: Service
metadata:
  name: iceci-postgres
spec:
  selector:
    name: iceci-postgres
  ports:
  - protocol: TCP
    name: postgres
    port: 5432
    targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iceci-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      name: iceci-sync
  template:
    metadata:
      labels:
        name: iceci-sync
    spec:
      serviceAccountName: iceci-operator
      containers:
      - name: iceci-sync
        image: docker.io/iceci/iceci-sync:alpha4-arm
        imagePullPolicy: Always
        env:
        - name: ICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "iceci-sync"
        - name: ICE_DYNAMIC_PVC
          value: dynamic-storage
        - name: ICE_SHARED_PVC
          value: shared-storage
        - name: ICE_IMAGE_KANIKO
          value: "gcr.io/kaniko-project/executor:v0.16.0"
        - name: ICE_IMAGE_BUILDKIT
          value: "moby/buildkit:v0.6.4-rootless"
        - name: ICE_IMAGE_UTILS
          value: "iceci/utils-arm:2"
        - name: ICECI_DB_USER
          value: user
        - name: ICECI_DB_HOST
          value: iceci-postgres
        - name: ICECI_DB_NAME
          value: iceci
        - name: ICECI_DB_PASS
          value: pass
        - name: ICECI_DB_PORT
          value: "5432"
        - name: ICECI_DB_DIALECT
          value: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iceci-ui
  labels:
    name: iceci-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      name: iceci-ui
  template:
    metadata:
      labels:
        name: iceci-ui
    spec:
      containers:
      - name: iceci-ui
        image: docker.io/iceci/iceci-ui:alpha4-arm
        imagePullPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: iceci-ui
spec:
  selector:
    name: iceci-ui
  type: ClusterIP
  ports:
  - protocol: TCP
    name: ui
    port: 80
    targetPort: 80

